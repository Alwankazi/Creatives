{"ast":null,"code":"import axios from \"axios\";\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAILURE, ORDER_DETAILS_REQUEST, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_FAILURE, ORDER_PAYMENT_REQUEST, ORDER_PAYMENT_SUCCESS, ORDER_PAYMENT_FAILURE, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAILURE, ORDER_LIST_REQUEST, ORDER_LIST_SUCCESS, ORDER_LIST_FAILURE } from \"../constants/orderConstants\";\nexport const createOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"/api/orders\", order, config);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_CREATE_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_DETAILS_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAYMENT_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n    dispatch({\n      type: ORDER_PAYMENT_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_PAYMENT_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_MY_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ORDER_LIST_FAILURE,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/alwankazi/Desktop/Creatives/frontend/src/actions/orderActions.js"],"names":["axios","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAILURE","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAILURE","ORDER_PAYMENT_REQUEST","ORDER_PAYMENT_SUCCESS","ORDER_PAYMENT_FAILURE","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAILURE","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAILURE","createOrder","order","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","getOrderDetails","id","get","payOrder","orderId","paymentResult","put","listMyOrders","listOrders"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    ORDER_CREATE_REQUEST,\n    ORDER_CREATE_SUCCESS,\n    ORDER_CREATE_FAILURE,\n    ORDER_DETAILS_REQUEST,\n    ORDER_DETAILS_SUCCESS,\n    ORDER_DETAILS_FAILURE,\n    ORDER_PAYMENT_REQUEST,\n    ORDER_PAYMENT_SUCCESS,\n    ORDER_PAYMENT_FAILURE,\n    ORDER_LIST_MY_REQUEST,\n    ORDER_LIST_MY_SUCCESS,\n    ORDER_LIST_MY_FAILURE,\n    ORDER_LIST_REQUEST,\n    ORDER_LIST_SUCCESS,\n    ORDER_LIST_FAILURE,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_CREATE_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.post(\"/api/orders\", order, config);\n\n        dispatch({\n            type: ORDER_CREATE_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_CREATE_FAILURE,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_DETAILS_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/${id}`, config);\n\n        dispatch({\n            type: ORDER_DETAILS_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_DETAILS_FAILURE,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const payOrder = (orderId, paymentResult) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_PAYMENT_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.put(`/api/orders/${orderId}/pay`, paymentResult, config);\n\n        dispatch({\n            type: ORDER_PAYMENT_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_PAYMENT_FAILURE,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_MY_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders/myorders`, config);\n\n        dispatch({\n            type: ORDER_LIST_MY_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_MY_FAILURE,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n\nexport const listOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: ORDER_LIST_REQUEST,\n        });\n\n        const {\n            userLogin: { userInfo },\n        } = getState();\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        const { data } = await axios.get(`/api/orders`, config);\n\n        dispatch({\n            type: ORDER_LIST_SUCCESS,\n            payload: data,\n        });\n    } catch (error) {\n        dispatch({\n            type: ORDER_LIST_FAILURE,\n            payload:\n                error.response && error.response.data.message\n                    ? error.response.data.message\n                    : error.message,\n        });\n    }\n};\n"]},"metadata":{},"sourceType":"module"}